// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package types

type Base struct {
	ID        uint64 `gorm:"column:id;primaryKey;autoIncrement" json:"id"`
	CreatedAt string `gorm:"column:created_at;autoCreateTime" json:"created_at"`
	UpdatedAt string `gorm:"column:updated_at;autoUpdateTime" json:"updated_at"`
	IsDeleted bool   `gorm:"column:is_deleted;default:false" json:"is_deleted"`
}

type ComerAccountResponse struct {
	Avatar    string `json:"avatar"`
	ComerId   int    `json:"comer_id"`
	Id        int    `json:"id"`
	IsLinked  bool   `json:"is_linked"`
	IsPrimary bool   `json:"is_primary"`
	Nickname  string `json:"nickname"`
	Oin       string `json:"oin"`
	Type      int    `json:"type"`
}

type ComerConnectedTotalResponse struct {
	BeConnectComerTotal int `json:"be_connect_comer_total"`
	ConnectComerTotal   int `json:"connect_comer_total"`
	ConnectStartupTotal int `json:"connect_startup_total"`
}

type ComerEducationResponse struct {
	ComerId     int    `json:"comer_id"`
	GraduatedAt string `json:"graduated_at"`
	Id          int    `json:"id"`
	Major       string `json:"major"`
	School      string `json:"school"`
	StartDate   string `json:"start_date"`
	EndDate     string `json:"end_date"`
	Description string `json:"description"`
	Level       int    `json:"level"`
	Degree      string `json:"degree"`
}

type ComerInfo struct {
	Bio     string `json:"bio"`
	ComerId int    `json:"comer_id"`
	Id      int    `json:"id"`
}

type ComerLanguageResponse struct {
	ComerId  int    `json:"comer_id"`
	Id       int    `json:"id"`
	Language string `json:"language"`
	Code     string `json:"code"`
	Level    int    `json:"level"`
	IsNative bool   `json:"is_native"`
}

type ComerSkillResponse struct {
	ComerId     int    `json:"comer_id"`
	Id          int    `json:"id"`
	SkillName   string `json:"skill_name"`
	Level       int    `json:"level"`
	Years       int    `json:"years"`
	Description string `json:"description"`
}

type ComerSocialResponse struct {
	ComerId      int    `json:"comer_id"`
	Id           int    `json:"id"`
	PlatformName string `json:"platform_name"`
	UserName     string `json:"user_name"`
	PlatformId   string `json:"platform_id"`
	IsVerified   bool   `json:"is_verified"`
	Url          string `json:"url"`
}

type FollowRelation struct {
	ComerID uint64 `json:comerID`
}

type OauthAccountBindingInfo struct {
	Linked      bool   `json:"linked"`
	AccountType int    `json:"accountType"`
	AccountId   uint64 `json:"accountId"`
}

type SimpleStartupInfo struct {
	Avatar  string `json:"avatar"`
	Id      int    `json:"id"`
	Name    string `json:"name"`
	OnChain bool   `json:"on_chain"`
}

type Startup struct {
	ComerID              uint64 `json:"comerID" db:"comer_id"`
	Name                 string `json:"name" db:"name"`
	Mode                 uint8  `json:"mode" db:"mode"`
	Logo                 string `json:"logo" db:"logo"`
	Cover                string `json:"cover" db:"cover"`
	Mission              string `json:"mission" db:"mission"`
	TokenContractAddress string `json:"tokenContractAddress" db:"token_contract_address"`
	Overview             string `json:"overview" db:"overview"`
	ChainID              uint64 `json:"chainID" db:"chain_id"`
	TxHash               string `json:"blockChainAddress" db:"tx_hash"`
	OnChain              bool   `json:"onChain" db:"on_chain"`
	KYC                  string `json:"kyc" db:"kyc"`
	ContractAudit        string `json:"contractAudit" db:"contract_audit"`
}

type StartupTeamMember struct {
	ComerID      uint64 `json:"comerID"`
	StartupID    uint64 `json:"startupID"`
	Position     string `json:"position"`
	Comer        string `json:"comer"`
	FollowedByMe bool   `json:"followedByMe"`
}

type Tag struct {
	Name     string `json:"name"`
	Category string `json:"category"`
	IsIndex  bool   `json:"isIndex"`
}

type TagListResponse struct {
	List []TagResponse `json:"list"`
}

type TagRelationResponse struct {
	Id       int         `json:"id"`
	Tag      TagResponse `json:"tag"`
	TagId    int         `json:"tag_id"`
	TargetId int         `json:"target_id"`
	Type     int         `json:"type"`
}

type TagResponse struct {
	Id       int    `json:"id"`
	Name     string `json:"name"`
	Category string `json:"category"`
}

type Wallet struct {
	Address string `json:address`
}
